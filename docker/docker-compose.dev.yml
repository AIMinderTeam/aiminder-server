services:
  aiminder-database:
    image: postgres:14
    container_name: aiminder-database
    environment:
      POSTGRES_DB: "aiminderdb"
      POSTGRES_USER: "aiminder"
      POSTGRES_PASSWORD: "aiminder"
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
  aiminder-server:
    image: nalsm0518/aiminder-server:${DEVELOP_AIMINDER_SERVER_TAG}
    container_name: aiminder-server
    depends_on:
      - aiminder-database
    environment:
      - DATABASE_URL=r2dbc:postgresql://aiminder-database:5432/aiminderdb
      - SPRING_PROFILES_ACTIVE=dev,openai
    restart: always
    ports:
      - "8080:8080"
  aiminder-client:
    image: nalsm0518/aiminder-client:${DEVELOP_AIMINDER_CLIENT_TAG}
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: aiminder-client
    depends_on:
      certbot-init:
        condition: service_completed_successfully
      aiminder-server:
        condition: service_started
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./cert/letsencrypt:/etc/letsencrypt:ro
      - ./cert/www:/var/www/certbot
  # 최초 1회 인증서 발급(Standalone) 자동화 컨테이너
  certbot-init:
    image: certbot/certbot:latest
    container_name: certbot-init
    # standalone는 80 포트를 직접 사용하므로 최초 발급 시에만 포트 바인딩
    ports:
      - "80:80"
    command: >-
      sh -c "
        DOMAIN=dev.aiminder.click && \
        if [ -f /etc/letsencrypt/live/$DOMAIN/fullchain.pem ]; then \
          echo 'cert already exists for' $DOMAIN; \
          exit 0; \
        else \
          certbot certonly --standalone \
            -d $DOMAIN \
            --preferred-challenges http \
            --http-01-port 80 \
            --agree-tos -m nalsm0518@gmail.com --no-eff-email --non-interactive; \
        fi
      "
    volumes:
      - ./cert/letsencrypt:/etc/letsencrypt
      - ./cert/www:/var/www/certbot
    restart: "no"

  # 주기적 자동 갱신(Webroot)
  certbot-renew:
    image: certbot/certbot:latest
    container_name: certbot-renew
    depends_on:
      certbot-init:
        condition: service_completed_successfully
    command: >-
      sh -c "
        mkdir -p /var/www/certbot && \
        echo '[renew] starting loop' && \
        while :; do \
          certbot renew --webroot -w /var/www/certbot --quiet || true; \
          sleep 12h; \
        done
      "
    volumes:
      - ./cert/letsencrypt:/etc/letsencrypt
      - ./cert/www:/var/www/certbot
    restart: always
